import cv2
import numpy as np
import os

# Ścieżka do folderu z obrazami
folder_path = 'inference/images'
output_folder = 'inference/modified_images'
os.makedirs(output_folder, exist_ok=True)

# Funkcje przekształceń
def apply_gaussian_blur(img):
    return cv2.GaussianBlur(img, (15, 15), 0)

def add_gaussian_noise(img, mean=0, sigma=25):
    noise = np.random.normal(mean, sigma, img.shape).astype(np.uint8)
    return cv2.add(img, noise)

def add_salt_pepper_noise(img, salt_prob=0.01, pepper_prob=0.01):
    noisy_img = np.copy(img)
    num_salt = np.ceil(salt_prob * img.size)
    coords = [np.random.randint(0, i - 1, int(num_salt)) for i in img.shape]
    noisy_img[coords[0], coords[1], :] = 255

    num_pepper = np.ceil(pepper_prob * img.size)
    coords = [np.random.randint(0, i - 1, int(num_pepper)) for i in img.shape]
    noisy_img[coords[0], coords[1], :] = 0

    return noisy_img

def change_brightness_contrast(img, alpha=1.5, beta=50):
    return cv2.convertScaleAbs(img, alpha=alpha, beta=beta)

def invert_colors(img):
    return cv2.bitwise_not(img)

def rotate_image(img, angle=90):
    (h, w) = img.shape[:2]
    center = (w // 2, h // 2)
    matrix = cv2.getRotationMatrix2D(center, angle, 1.0)
    return cv2.warpAffine(img, matrix, (w, h))

# Przekształcenia dla każdego pliku
transformations = [
    apply_gaussian_blur,
    add_gaussian_noise,
    add_salt_pepper_noise,
    change_brightness_contrast,
    invert_colors,
    rotate_image
]

# Zastosowanie przekształceń do każdego pliku
for i, filename in enumerate(sorted(os.listdir(folder_path))):
    if filename.endswith(('.jpg', '.jpeg', '.png')):
        image_path = os.path.join(folder_path, filename)
        img = cv2.imread(image_path)
        
        # Zastosowanie przekształcenia odpowiedniego dla bieżącego pliku
        transformed_img = transformations[i](img)
        
        # Zapisanie zmodyfikowanego obrazu
        output_path = os.path.join(output_folder, f'modified_{filename}')
        cv2.imwrite(output_path, transformed_img)

print("Przekształcenia zakończone i zapisane w folderze:", output_folder)
